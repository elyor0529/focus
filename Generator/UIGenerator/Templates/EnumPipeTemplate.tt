<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
import { Pipe, PipeTransform } from '@angular/core';
import { <#= PropertyName #> } from "app/<#= Module.ModuleName #>/<#= PropertyName.ToLower(new System.Globalization.CultureInfo("en-EN", false)) #>/<#= PropertyName.ToLower(new System.Globalization.CultureInfo("en-EN", false)) #>";
import { <#= PropertyName #>Service } from "app/<#= Module.ModuleName #>/<#= PropertyName.ToLower(new System.Globalization.CultureInfo("en-EN", false)) #>/<#= PropertyName.ToLower(new System.Globalization.CultureInfo("en-EN", false)) #>.service";

@Pipe({
  name: '<#= PropertyName #>Pipe',
  pure: false
})
export class <#= PropertyName #>Pipe implements PipeTransform {

  transform(key: number): string {
      var tc: <#= PropertyName #> = new <#= PropertyName #>();
      var <#= PropertyName.ToLower(new System.Globalization.CultureInfo("en-EN", false)) #>Service: <#= PropertyName #>Service = new <#= PropertyName #>Service();
      var arr = <#= PropertyName.ToLower(new System.Globalization.CultureInfo("en-EN", false)) #>Service.getList();
      return arr.filter(t => t.value === key.toString())[0].key;
  }
}
